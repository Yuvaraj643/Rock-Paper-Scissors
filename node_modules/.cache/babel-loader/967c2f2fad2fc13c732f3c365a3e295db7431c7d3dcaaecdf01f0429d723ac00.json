{"ast":null,"code":"var _jsxFileName = \"C:\\\\Yuvaraj\\\\Skibble\\\\rock-paper-scissors\\\\src\\\\Components\\\\Game\\\\Game.jsx\",\n  _s = $RefreshSig$();\nconst playerRound = (playerSelection, computer) => {\n  let result;\n  let computerScore = 0;\n  let playerScore = 0;\n  const player = playerSelection.toLowerCase();\n  if (player === computer) {\n    result = \"Draw Match\";\n    computerScore = computerScore;\n    playerScore = playerScore;\n  } else if (player === \"rock\" && computer === \"paper\") {\n    result = \"You Lose ... 'Paper beats Rock'\";\n    computerScore += 1;\n  } else if (player === \"rock\" && computer === \"scissor\") {\n    result = \"You Win!!! Rock breaks the scissor\";\n    playerScore += 1;\n  } else if (player === \"paper\" && computer === \"rock\") {\n    result = \"Hurray you win!! Paper covers the rock\";\n    playerScore += 1;\n  } else if (player === \"paper\" && computer === \"scissor\") {\n    result = \"Oh no you lose.. Scissor cuts the paper\";\n    computerScore += 1;\n  } else if (player === \"scissor\" && computer === \"rock\") {\n    result = \"You lose .. Rock breaks the scissor\";\n    computerScore += 1;\n  } else if (player === \"scissor\" && computer === \"paper\") {\n    result = \"You win!! Scissor cuts the paper\";\n    playerScore += 1;\n  } else {\n    result = \"You entered the wrong choice\";\n  }\n  return result;\n};\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport rockImage from \"./rock.png\";\nimport paperImage from \"./paper.png\";\nimport scissorsImage from \"./scissors.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const choices = [\"rock\", \"paper\", \"scissors\"];\n  const [playerChoice, setPlayerChoice] = useState(null);\n  const [computerChoice, setComputerChoice] = useState(null);\n  const [result, setResult] = useState(null);\n  const playRound = choice => {\n    const computer = getComputerChoice();\n    const roundResult = playerRound(choice, computer);\n    setPlayerChoice(choice);\n    setComputerChoice(computer);\n    setResult(roundResult);\n  };\n  const getComputerChoice = () => {\n    return choices[Math.floor(Math.random() * choices.length)];\n  };\n  const playerRound = (playerSelection, computer) => {\n    // ... existing logic for determining the result ...\n\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rock Paper Scissors Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: choices.map(choice => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => playRound(choice),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: choice === \"rock\" ? rockImage : choice === \"paper\" ? paperImage : scissorsImage,\n          alt: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, choice, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), playerChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Player's Choice: \", playerChoice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), computerChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Computer's Choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Computer's Choice: \", computerChoice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"TsLLQ+V5Y245UOYV3tTW+s2Ygy4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["playerRound","playerSelection","computer","result","computerScore","playerScore","player","toLowerCase","React","useState","rockImage","paperImage","scissorsImage","jsxDEV","_jsxDEV","Game","_s","choices","playerChoice","setPlayerChoice","computerChoice","setComputerChoice","setResult","playRound","choice","getComputerChoice","roundResult","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Yuvaraj/Skibble/rock-paper-scissors/src/Components/Game/Game.jsx"],"sourcesContent":["\r\n  const playerRound = (playerSelection, computer) => {\r\n    let result;\r\n    let computerScore = 0;\r\n    let playerScore = 0;\r\n    const player = playerSelection.toLowerCase();\r\n\r\n    if (player === computer) {\r\n      result = \"Draw Match\";\r\n      computerScore = computerScore;\r\n      playerScore = playerScore;\r\n    } else if (player === \"rock\" && computer === \"paper\") {\r\n      result = \"You Lose ... 'Paper beats Rock'\";\r\n      computerScore += 1;\r\n    } else if (player === \"rock\" && computer === \"scissor\") {\r\n      result = \"You Win!!! Rock breaks the scissor\";\r\n      playerScore += 1;\r\n    } else if (player === \"paper\" && computer === \"rock\") {\r\n      result = \"Hurray you win!! Paper covers the rock\";\r\n      playerScore += 1;\r\n    } else if (player === \"paper\" && computer === \"scissor\") {\r\n      result = \"Oh no you lose.. Scissor cuts the paper\";\r\n      computerScore += 1;\r\n    } else if (player === \"scissor\" && computer === \"rock\") {\r\n      result = \"You lose .. Rock breaks the scissor\";\r\n      computerScore += 1;\r\n    } else if (player === \"scissor\" && computer === \"paper\") {\r\n      result = \"You win!! Scissor cuts the paper\";\r\n      playerScore += 1;\r\n    } else {\r\n      result = \"You entered the wrong choice\";\r\n    }\r\n    return result;\r\n  };\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport rockImage from \"./rock.png\";\r\nimport paperImage from \"./paper.png\";\r\nimport scissorsImage from \"./scissors.png\";\r\n\r\nconst Game = () => {\r\n  const choices = [\"rock\", \"paper\", \"scissors\"];\r\n  const [playerChoice, setPlayerChoice] = useState(null);\r\n  const [computerChoice, setComputerChoice] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const playRound = (choice) => {\r\n    const computer = getComputerChoice();\r\n    const roundResult = playerRound(choice, computer);\r\n    setPlayerChoice(choice);\r\n    setComputerChoice(computer);\r\n    setResult(roundResult);\r\n  };\r\n\r\n  const getComputerChoice = () => {\r\n    return choices[Math.floor(Math.random() * choices.length)];\r\n  };\r\n\r\n  const playerRound = (playerSelection, computer) => {\r\n    // ... existing logic for determining the result ...\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Rock Paper Scissors Game</h1>\r\n      <div>\r\n        {choices.map((choice) => (\r\n          <button key={choice} onClick={() => playRound(choice)}>\r\n            <img src={choice === \"rock\" ? rockImage : choice === \"paper\" ? paperImage : scissorsImage} alt={choice} />\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {playerChoice && (\r\n        <div className=\"result-section\">\r\n          <h2>Your Choice</h2>\r\n          <p>Player's Choice: {playerChoice}</p>\r\n        </div>\r\n      )}\r\n      {computerChoice && (\r\n        <div className=\"result-section\">\r\n          <h2>Computer's Choice</h2>\r\n          <p>Computer's Choice: {computerChoice}</p>\r\n        </div>\r\n      )}\r\n      {result && (\r\n        <div className=\"result-section\">\r\n          <h2>Game Result</h2>\r\n          <p>Result: {result}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AACE,MAAMA,WAAW,GAAGA,CAACC,eAAe,EAAEC,QAAQ,KAAK;EACjD,IAAIC,MAAM;EACV,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIC,WAAW,GAAG,CAAC;EACnB,MAAMC,MAAM,GAAGL,eAAe,CAACM,WAAW,CAAC,CAAC;EAE5C,IAAID,MAAM,KAAKJ,QAAQ,EAAE;IACvBC,MAAM,GAAG,YAAY;IACrBC,aAAa,GAAGA,aAAa;IAC7BC,WAAW,GAAGA,WAAW;EAC3B,CAAC,MAAM,IAAIC,MAAM,KAAK,MAAM,IAAIJ,QAAQ,KAAK,OAAO,EAAE;IACpDC,MAAM,GAAG,iCAAiC;IAC1CC,aAAa,IAAI,CAAC;EACpB,CAAC,MAAM,IAAIE,MAAM,KAAK,MAAM,IAAIJ,QAAQ,KAAK,SAAS,EAAE;IACtDC,MAAM,GAAG,oCAAoC;IAC7CE,WAAW,IAAI,CAAC;EAClB,CAAC,MAAM,IAAIC,MAAM,KAAK,OAAO,IAAIJ,QAAQ,KAAK,MAAM,EAAE;IACpDC,MAAM,GAAG,wCAAwC;IACjDE,WAAW,IAAI,CAAC;EAClB,CAAC,MAAM,IAAIC,MAAM,KAAK,OAAO,IAAIJ,QAAQ,KAAK,SAAS,EAAE;IACvDC,MAAM,GAAG,yCAAyC;IAClDC,aAAa,IAAI,CAAC;EACpB,CAAC,MAAM,IAAIE,MAAM,KAAK,SAAS,IAAIJ,QAAQ,KAAK,MAAM,EAAE;IACtDC,MAAM,GAAG,qCAAqC;IAC9CC,aAAa,IAAI,CAAC;EACpB,CAAC,MAAM,IAAIE,MAAM,KAAK,SAAS,IAAIJ,QAAQ,KAAK,OAAO,EAAE;IACvDC,MAAM,GAAG,kCAAkC;IAC3CE,WAAW,IAAI,CAAC;EAClB,CAAC,MAAM;IACLF,MAAM,GAAG,8BAA8B;EACzC;EACA,OAAOA,MAAM;AACf,CAAC;AAEH,OAAOK,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;EAC7C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACN,MAAM,EAAEmB,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMc,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAMtB,QAAQ,GAAGuB,iBAAiB,CAAC,CAAC;IACpC,MAAMC,WAAW,GAAG1B,WAAW,CAACwB,MAAM,EAAEtB,QAAQ,CAAC;IACjDiB,eAAe,CAACK,MAAM,CAAC;IACvBH,iBAAiB,CAACnB,QAAQ,CAAC;IAC3BoB,SAAS,CAACI,WAAW,CAAC;EACxB,CAAC;EAED,MAAMD,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAOR,OAAO,CAACU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,OAAO,CAACa,MAAM,CAAC,CAAC;EAC5D,CAAC;EAED,MAAM9B,WAAW,GAAGA,CAACC,eAAe,EAAEC,QAAQ,KAAK;IACjD;;IAEA,OAAOC,MAAM;EACf,CAAC;EAED,oBACEW,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCtB,OAAA;MAAAkB,QAAA,EACGf,OAAO,CAACoB,GAAG,CAAEb,MAAM,iBAClBV,OAAA;QAAqBwB,OAAO,EAAEA,CAAA,KAAMf,SAAS,CAACC,MAAM,CAAE;QAAAQ,QAAA,eACpDlB,OAAA;UAAKyB,GAAG,EAAEf,MAAM,KAAK,MAAM,GAAGd,SAAS,GAAGc,MAAM,KAAK,OAAO,GAAGb,UAAU,GAAGC,aAAc;UAAC4B,GAAG,EAAEhB;QAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD/FZ,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLlB,YAAY,iBACXJ,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtB,OAAA;QAAAkB,QAAA,GAAG,mBAAiB,EAACd,YAAY;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACN,EACAhB,cAAc,iBACbN,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BtB,OAAA;QAAAkB,QAAA,GAAG,qBAAmB,EAACZ,cAAc;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN,EACAjC,MAAM,iBACLW,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtB,OAAA;QAAAkB,QAAA,GAAG,UAAQ,EAAC7B,MAAM;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtDID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAwDV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}